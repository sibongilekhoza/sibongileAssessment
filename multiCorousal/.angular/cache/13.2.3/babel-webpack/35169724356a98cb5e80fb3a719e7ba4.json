{"ast":null,"code":"import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { InjectionToken, Directive, TemplateRef, Component, ElementRef, Renderer2, ViewContainerRef, ContentChild, ViewChild, Input, EventEmitter, ContentChildren, HostBinding, Output, ComponentFactoryResolver, Inject, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/portal';\n\nfunction MdbTabComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nconst _c0 = [\"*\"];\n\nfunction MdbTabsComponent_li_1_ng_template_2_ng_template_0_Template(rf, ctx) {}\n\nfunction MdbTabsComponent_li_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MdbTabsComponent_li_1_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 7);\n  }\n\n  if (rf & 2) {\n    const tab_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r2.titleContent);\n  }\n}\n\nfunction MdbTabsComponent_li_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const tab_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r2.title);\n  }\n}\n\nfunction MdbTabsComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function MdbTabsComponent_li_1_Template_li_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r10);\n      const i_r3 = restoredCtx.index;\n      const ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.setActiveTab(i_r3);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"a\", 5);\n    ɵngcc0.ɵɵtemplate(2, MdbTabsComponent_li_1_ng_template_2_Template, 1, 1, \"ng-template\", 6);\n    ɵngcc0.ɵɵtemplate(3, MdbTabsComponent_li_1_ng_template_3_Template, 1, 1, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r2 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"active\", tab_r2.active)(\"disabled\", tab_r2.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r2.titleContent);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r2.titleContent);\n  }\n}\n\nfunction MdbTabsComponent_ng_container_3_ng_template_2_Template(rf, ctx) {}\n\nconst _c1 = function (a0, a1) {\n  return {\n    show: a0,\n    active: a1\n  };\n};\n\nfunction MdbTabsComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(2, MdbTabsComponent_ng_container_3_ng_template_2_Template, 0, 0, \"ng-template\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r11 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c1, tab_r11.active, tab_r11.active));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tab\", tab_r11);\n  }\n}\n\nconst _c2 = function (a0, a1, a2, a3, a4, a5, a6) {\n  return {\n    \"nav-pills\": a0,\n    \"nav-tabs\": a1,\n    \"nav-fill\": a2,\n    \"nav-justified\": a3,\n    \"flex-column\": a4,\n    \"col-3\": a5,\n    \"text-center\": a6\n  };\n};\n\nconst _c3 = function (a0) {\n  return {\n    \"col-9\": a0\n  };\n};\n\nconst MDB_TAB_CONTENT = new InjectionToken('MdbTabContentDirective');\nlet MdbTabContentDirective = /*#__PURE__*/(() => {\n  class MdbTabContentDirective {\n    constructor(template) {\n      this.template = template;\n    }\n\n  }\n\n  MdbTabContentDirective.ɵfac = function MdbTabContentDirective_Factory(t) {\n    return new (t || MdbTabContentDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  MdbTabContentDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdbTabContentDirective,\n    selectors: [[\"\", \"mdbTabContent\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MDB_TAB_CONTENT,\n      useExisting: MdbTabContentDirective\n    }])]\n  });\n  return MdbTabContentDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst MDB_TAB_TITLE = new InjectionToken('MdbTabTitleDirective');\nlet MdbTabTitleDirective = /*#__PURE__*/(() => {\n  class MdbTabTitleDirective {\n    constructor(template) {\n      this.template = template;\n    }\n\n  }\n\n  MdbTabTitleDirective.ɵfac = function MdbTabTitleDirective_Factory(t) {\n    return new (t || MdbTabTitleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  MdbTabTitleDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdbTabTitleDirective,\n    selectors: [[\"\", \"mdbTabTitle\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MDB_TAB_TITLE,\n      useExisting: MdbTabTitleDirective\n    }])]\n  });\n  return MdbTabTitleDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MdbTabComponent = /*#__PURE__*/(() => {\n  class MdbTabComponent {\n    constructor(_elementRef, _renderer, _vcr) {\n      this._elementRef = _elementRef;\n      this._renderer = _renderer;\n      this._vcr = _vcr;\n      this.activeStateChange$ = new Subject();\n      this._disabled = false;\n      this._contentPortal = null;\n      this._titlePortal = null;\n      this._active = false;\n    }\n\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n\n    get active() {\n      return this._active;\n    }\n\n    get content() {\n      return this._contentPortal;\n    }\n\n    get titleContent() {\n      return this._titlePortal;\n    }\n\n    get shouldAttach() {\n      return this._lazyContent === undefined;\n    } // eslint-disable-next-line @typescript-eslint/adjacent-overload-signatures\n\n\n    set active(value) {\n      if (value) {\n        this._renderer.addClass(this._elementRef.nativeElement, 'show');\n\n        this._renderer.addClass(this._elementRef.nativeElement, 'active');\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, 'show');\n\n        this._renderer.removeClass(this._elementRef.nativeElement, 'active');\n      }\n\n      this._active = value;\n      this.activeStateChange$.next(value);\n    }\n\n    ngOnInit() {\n      this._createContentPortal();\n\n      if (this._titleContent) {\n        this._createTitlePortal();\n      }\n    }\n\n    _createContentPortal() {\n      const content = this._lazyContent || this._content;\n      this._contentPortal = new TemplatePortal(content, this._vcr);\n    }\n\n    _createTitlePortal() {\n      this._titlePortal = new TemplatePortal(this._titleContent, this._vcr);\n    }\n\n  }\n\n  MdbTabComponent.ɵfac = function MdbTabComponent_Factory(t) {\n    return new (t || MdbTabComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n  };\n\n  MdbTabComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbTabComponent,\n    selectors: [[\"mdb-tab\"]],\n    contentQueries: function MdbTabComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MDB_TAB_CONTENT, 7, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MDB_TAB_TITLE, 7, TemplateRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._titleContent = _t.first);\n      }\n    },\n    viewQuery: function MdbTabComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      title: \"title\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MdbTabComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MdbTabComponent_ng_template_0_Template, 1, 0, \"ng-template\");\n      }\n    },\n    encapsulation: 2\n  });\n  return MdbTabComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass MdbTabChange {}\n\nlet MdbTabsComponent = /*#__PURE__*/(() => {\n  class MdbTabsComponent {\n    constructor() {\n      this._destroy$ = new Subject();\n      this._fill = false;\n      this._justified = false;\n      this._pills = false;\n      this._vertical = false;\n      this.activeTabChange = new EventEmitter();\n    }\n\n    get fill() {\n      return this._fill;\n    }\n\n    set fill(value) {\n      this._fill = coerceBooleanProperty(value);\n    }\n\n    get justified() {\n      return this._justified;\n    }\n\n    set justified(value) {\n      this._justified = coerceBooleanProperty(value);\n    }\n\n    get pills() {\n      return this._pills;\n    }\n\n    set pills(value) {\n      this._pills = coerceBooleanProperty(value);\n    }\n\n    get vertical() {\n      return this._vertical;\n    }\n\n    set vertical(value) {\n      this._vertical = coerceBooleanProperty(value);\n    }\n\n    ngAfterContentInit() {\n      const firstActiveTabIndex = this.tabs.toArray().findIndex(tab => !tab.disabled);\n      this.setActiveTab(firstActiveTabIndex);\n      this.tabs.changes.pipe(takeUntil(this._destroy$)).subscribe(() => {\n        const hasActiveTab = this.tabs.find(tab => tab.active);\n\n        if (!hasActiveTab) {\n          const closestTabIndex = this._getClosestTabIndex(this._selectedIndex);\n\n          if (closestTabIndex !== -1) {\n            this.setActiveTab(closestTabIndex);\n          }\n        }\n      });\n    }\n\n    setActiveTab(index) {\n      const activeTab = this.tabs.toArray()[index];\n\n      if (!activeTab || activeTab && activeTab.disabled) {\n        return;\n      }\n\n      this.tabs.forEach(tab => tab.active = tab === activeTab);\n      this._selectedIndex = index;\n\n      const tabChangeEvent = this._getTabChangeEvent(index, activeTab);\n\n      this.activeTabChange.emit(tabChangeEvent);\n    }\n\n    _getTabChangeEvent(index, tab) {\n      const event = new MdbTabChange();\n      event.index = index;\n      event.tab = tab;\n      return event;\n    }\n\n    _getClosestTabIndex(index) {\n      const tabs = this.tabs.toArray();\n      const tabsLength = tabs.length;\n\n      if (!tabsLength) {\n        return -1;\n      }\n\n      for (let i = 1; i <= tabsLength; i += 1) {\n        const prevIndex = index - i;\n        const nextIndex = index + i;\n\n        if (tabs[prevIndex] && !tabs[prevIndex].disabled) {\n          return prevIndex;\n        }\n\n        if (tabs[nextIndex] && !tabs[nextIndex].disabled) {\n          return nextIndex;\n        }\n      }\n\n      return -1;\n    }\n\n    ngOnDestroy() {\n      this._destroy$.next();\n\n      this._destroy$.complete();\n    }\n\n  }\n\n  MdbTabsComponent.ɵfac = function MdbTabsComponent_Factory(t) {\n    return new (t || MdbTabsComponent)();\n  };\n\n  MdbTabsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbTabsComponent,\n    selectors: [[\"mdb-tabs\"]],\n    contentQueries: function MdbTabsComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MdbTabComponent, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabs = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function MdbTabsComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"row\", ctx.vertical);\n      }\n    },\n    inputs: {\n      fill: \"fill\",\n      justified: \"justified\",\n      pills: \"pills\",\n      vertical: \"vertical\"\n    },\n    outputs: {\n      activeTabChange: \"activeTabChange\"\n    },\n    decls: 4,\n    vars: 14,\n    consts: [[\"role\", \"tablist\", 1, \"nav\", \"mb-3\", \"col-3\", \"flex-column\", 3, \"ngClass\"], [\"class\", \"nav-item\", \"role\", \"presentation\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"tab-content\", 3, \"ngClass\"], [4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\", 1, \"nav-item\", 3, \"click\"], [\"href\", \"javascript:void(0)\", \"role\", \"tab\", 1, \"nav-link\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [1, \"tab-pane\", \"fade\", 3, \"ngClass\"], [\"mdbTabPortalOutlet\", \"\", 3, \"tab\"]],\n    template: function MdbTabsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵtemplate(1, MdbTabsComponent_li_1_Template, 4, 6, \"li\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, MdbTabsComponent_ng_container_3_Template, 3, 5, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction7(4, _c2, ctx.pills, !ctx.pills, ctx.fill, ctx.justified, ctx.vertical, ctx.vertical, ctx.vertical));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(12, _c3, ctx.vertical));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n      }\n    },\n    directives: function () {\n      return [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc2.CdkPortalOutlet, MdbTabPortalOutlet];\n    },\n    encapsulation: 2\n  });\n  return MdbTabsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // eslint-disable-next-line @angular-eslint/directive-class-suffix\n\n\nlet MdbTabPortalOutlet = /*#__PURE__*/(() => {\n  class MdbTabPortalOutlet extends CdkPortalOutlet {\n    constructor(_cfr, _vcr, _document) {\n      super(_cfr, _vcr, _document);\n      this._destroy$ = new Subject();\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n\n      if ((this.tab.shouldAttach || this.tab.active) && !this.hasAttached()) {\n        this.attach(this.tab.content);\n      } else {\n        this.tab.activeStateChange$.pipe(takeUntil(this._destroy$)).subscribe(isActive => {\n          if (isActive && !this.hasAttached()) {\n            this.attach(this.tab.content);\n          }\n        });\n      }\n    }\n\n    ngOnDestroy() {\n      this._destroy$.next();\n\n      this._destroy$.complete();\n\n      super.ngOnDestroy();\n    }\n\n  }\n\n  MdbTabPortalOutlet.ɵfac = function MdbTabPortalOutlet_Factory(t) {\n    return new (t || MdbTabPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n  };\n\n  MdbTabPortalOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdbTabPortalOutlet,\n    selectors: [[\"\", \"mdbTabPortalOutlet\", \"\"]],\n    inputs: {\n      tab: \"tab\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MdbTabPortalOutlet;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MdbTabsModule = /*#__PURE__*/(() => {\n  class MdbTabsModule {}\n\n  MdbTabsModule.ɵfac = function MdbTabsModule_Factory(t) {\n    return new (t || MdbTabsModule)();\n  };\n\n  MdbTabsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MdbTabsModule\n  });\n  MdbTabsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, PortalModule]]\n  });\n  return MdbTabsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MdbTabsModule, {\n    declarations: function () {\n      return [MdbTabComponent, MdbTabContentDirective, MdbTabTitleDirective, MdbTabPortalOutlet, MdbTabsComponent];\n    },\n    imports: function () {\n      return [CommonModule, PortalModule];\n    },\n    exports: function () {\n      return [MdbTabComponent, MdbTabContentDirective, MdbTabTitleDirective, MdbTabPortalOutlet, MdbTabsComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MdbTabComponent, MdbTabContentDirective, MdbTabTitleDirective, MdbTabsComponent, MdbTabsModule, MDB_TAB_CONTENT as ɵa, MDB_TAB_TITLE as ɵb, MdbTabPortalOutlet as ɵc }; //# sourceMappingURL=mdb-angular-ui-kit-tabs.js.map","map":null,"metadata":{},"sourceType":"module"}