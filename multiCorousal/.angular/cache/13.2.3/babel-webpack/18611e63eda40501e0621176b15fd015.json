{"ast":null,"code":"import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { forwardRef, EventEmitter, Directive, Input, Output, HostBinding, HostListener, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nconst MDB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\n  useExisting: forwardRef(() => MdbCheckboxDirective),\n  multi: true\n};\n\nclass MdbCheckboxChange {}\n\nlet MdbCheckboxDirective = /*#__PURE__*/(() => {\n  class MdbCheckboxDirective {\n    constructor() {\n      this._checked = false;\n      this._value = null;\n      this._disabled = false;\n      this.checkboxChange = new EventEmitter(); // Control Value Accessor Methods\n\n      this.onChange = _ => {};\n\n      this.onTouched = () => {};\n    }\n\n    get checked() {\n      return this._checked;\n    }\n\n    set checked(value) {\n      this._checked = coerceBooleanProperty(value);\n    }\n\n    get value() {\n      return this._value;\n    }\n\n    set value(value) {\n      this._value = value;\n    }\n\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n\n    get isDisabled() {\n      return this._disabled;\n    }\n\n    get isChecked() {\n      return this._checked;\n    }\n\n    onCheckboxClick() {\n      this.toggle();\n    }\n\n    onBlur() {\n      this.onTouched();\n    }\n\n    get changeEvent() {\n      const newChangeEvent = new MdbCheckboxChange();\n      newChangeEvent.element = this;\n      newChangeEvent.checked = this.checked;\n      return newChangeEvent;\n    }\n\n    toggle() {\n      if (this.disabled) {\n        return;\n      }\n\n      this._checked = !this._checked;\n      this.onChange(this.checked);\n      this.onCheckboxChange();\n    }\n\n    onCheckboxChange() {\n      this.checkboxChange.emit(this.changeEvent);\n    }\n\n    writeValue(value) {\n      this.value = value;\n      this.checked = !!value;\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n\n  }\n\n  MdbCheckboxDirective.ɵfac = function MdbCheckboxDirective_Factory(t) {\n    return new (t || MdbCheckboxDirective)();\n  };\n\n  MdbCheckboxDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdbCheckboxDirective,\n    selectors: [[\"\", \"mdbCheckbox\", \"\"]],\n    hostVars: 2,\n    hostBindings: function MdbCheckboxDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCheckboxDirective_click_HostBindingHandler() {\n          return ctx.onCheckboxClick();\n        })(\"blur\", function MdbCheckboxDirective_blur_HostBindingHandler() {\n          return ctx.onBlur();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.isDisabled)(\"checked\", ctx.isChecked);\n      }\n    },\n    inputs: {\n      checked: \"checked\",\n      value: \"value\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      checkboxChange: \"checkboxChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([MDB_CHECKBOX_VALUE_ACCESSOR])]\n  });\n  return MdbCheckboxDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MdbCheckboxModule = /*#__PURE__*/(() => {\n  class MdbCheckboxModule {}\n\n  MdbCheckboxModule.ɵfac = function MdbCheckboxModule_Factory(t) {\n    return new (t || MdbCheckboxModule)();\n  };\n\n  MdbCheckboxModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MdbCheckboxModule\n  });\n  MdbCheckboxModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule]]\n  });\n  return MdbCheckboxModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MdbCheckboxModule, {\n    declarations: function () {\n      return [MdbCheckboxDirective];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule];\n    },\n    exports: function () {\n      return [MdbCheckboxDirective];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MDB_CHECKBOX_VALUE_ACCESSOR, MdbCheckboxChange, MdbCheckboxDirective, MdbCheckboxModule }; //# sourceMappingURL=mdb-angular-ui-kit-checkbox.js.map","map":null,"metadata":{},"sourceType":"module"}